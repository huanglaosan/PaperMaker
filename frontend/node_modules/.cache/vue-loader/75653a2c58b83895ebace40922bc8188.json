{"remainingRequest":"C:\\Users\\Administrator\\documents\\papermaker_master\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\documents\\papermaker_master\\frontend\\src\\components\\swing.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\documents\\papermaker_master\\frontend\\src\\components\\swing.vue","mtime":1557866351515},{"path":"C:\\Users\\Administrator\\documents\\papermaker_master\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\documents\\papermaker_master\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\documents\\papermaker_master\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\documents\\papermaker_master\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  name: 'swing',\r\n  data () {\r\n    return {\r\n      width: 300,\r\n      height: 300,\r\n      tagsNum: 20,\r\n      RADIUS: 120,\r\n      speedX: 5 * Math.PI / 360,\r\n      speedY: 5 * Math.PI / 360,\r\n      tags: []\r\n    }\r\n  },\r\n  computed: {\r\n    CX () {\r\n      return this.width / 2\r\n    },\r\n    CY () {\r\n      return this.height / 2\r\n    }\r\n  },\r\n  created () {\r\n    let tags = []\r\n    let tagtexts = ['最新试题', '中高考必杀', '易错题突破', '竞赛专题', '自主招生', '个人信息', '组卷记录']\r\n    for (let i = 0; i < this.tagsNum; i++) {\r\n      let tag = {}\r\n      let k = -1 + (2 * (i + 1) - 1) / this.tagsNum\r\n      let a = Math.acos(k)\r\n      let b = a * Math.sqrt(this.tagsNum * Math.PI)\r\n      tag.text = tagtexts[i % 7]\r\n      tag.x = this.CX + this.RADIUS * Math.sin(a) * Math.cos(b)\r\n      tag.y = this.CY + this.RADIUS * Math.sin(a) * Math.sin(b)\r\n      tag.z = this.RADIUS * Math.cos(a)\r\n      tag.href = 'https://imgss.github.io'\r\n      tags.push(tag)\r\n    }\r\n    this.tags = tags\r\n  },\r\n  mounted () {\r\n    setInterval(() => {\r\n      this.rotateX(this.speedX)\r\n      this.rotateY(this.speedY)\r\n    }, 17)\r\n  },\r\n  methods: {\r\n    rotateX (speedX) {\r\n      var cos = Math.cos(speedX)\r\n      var sin = Math.sin(speedX)\r\n      for (let tag of this.tags) {\r\n        var y1 = (tag.y - this.CY) * cos - tag.z * sin + this.CY\r\n        var z1 = tag.z * cos + (tag.y - this.CY) * sin\r\n        tag.y = y1\r\n        tag.z = z1\r\n      }\r\n    },\r\n    rotateY (speedY) {\r\n      var cos = Math.cos(speedY)\r\n      var sin = Math.sin(speedY)\r\n      for (let tag of this.tags) {\r\n        var x1 = (tag.x - this.CX) * cos - tag.z * sin + this.CX\r\n        var z1 = tag.z * cos + (tag.x - this.CX) * sin\r\n        tag.x = x1\r\n        tag.z = z1\r\n      }\r\n    },\r\n    listener (event) {\r\n      var x = event.clientX - this.CX\r\n      var y = event.clientY - this.CY\r\n      this.speedX = x * 0.005 > 0 ? Math.min(this.RADIUS * 0.0001, x * 0.005) : Math.max(-this.RADIUS * 0.0001, x * 0.005)\r\n      this.speedY = y * 0.005 > 0 ? Math.min(this.RADIUS * 0.0001, y * 0.005) : Math.max(-this.RADIUS * 0.0001, y * 0.005)\r\n    }\r\n  }\r\n\r\n}\r\n\r\n",{"version":3,"sources":["swing.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"swing.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n\r\n  <div>\r\n    <svg :width='width' :height='height' @mousemove='listener($event)'>\r\n      <a :href=\"tag.href\" v-for='tag in tags'>\r\n        <text :x='tag.x' :y='tag.y' :font-size='20 * (600/(600-tag.z))' :fill-opacity='((400+tag.z)/600)'>{{tag.text}}</text>\r\n      </a>\r\n    </svg>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'swing',\r\n  data () {\r\n    return {\r\n      width: 300,\r\n      height: 300,\r\n      tagsNum: 20,\r\n      RADIUS: 120,\r\n      speedX: 5 * Math.PI / 360,\r\n      speedY: 5 * Math.PI / 360,\r\n      tags: []\r\n    }\r\n  },\r\n  computed: {\r\n    CX () {\r\n      return this.width / 2\r\n    },\r\n    CY () {\r\n      return this.height / 2\r\n    }\r\n  },\r\n  created () {\r\n    let tags = []\r\n    let tagtexts = ['最新试题', '中高考必杀', '易错题突破', '竞赛专题', '自主招生', '个人信息', '组卷记录']\r\n    for (let i = 0; i < this.tagsNum; i++) {\r\n      let tag = {}\r\n      let k = -1 + (2 * (i + 1) - 1) / this.tagsNum\r\n      let a = Math.acos(k)\r\n      let b = a * Math.sqrt(this.tagsNum * Math.PI)\r\n      tag.text = tagtexts[i % 7]\r\n      tag.x = this.CX + this.RADIUS * Math.sin(a) * Math.cos(b)\r\n      tag.y = this.CY + this.RADIUS * Math.sin(a) * Math.sin(b)\r\n      tag.z = this.RADIUS * Math.cos(a)\r\n      tag.href = 'https://imgss.github.io'\r\n      tags.push(tag)\r\n    }\r\n    this.tags = tags\r\n  },\r\n  mounted () {\r\n    setInterval(() => {\r\n      this.rotateX(this.speedX)\r\n      this.rotateY(this.speedY)\r\n    }, 17)\r\n  },\r\n  methods: {\r\n    rotateX (speedX) {\r\n      var cos = Math.cos(speedX)\r\n      var sin = Math.sin(speedX)\r\n      for (let tag of this.tags) {\r\n        var y1 = (tag.y - this.CY) * cos - tag.z * sin + this.CY\r\n        var z1 = tag.z * cos + (tag.y - this.CY) * sin\r\n        tag.y = y1\r\n        tag.z = z1\r\n      }\r\n    },\r\n    rotateY (speedY) {\r\n      var cos = Math.cos(speedY)\r\n      var sin = Math.sin(speedY)\r\n      for (let tag of this.tags) {\r\n        var x1 = (tag.x - this.CX) * cos - tag.z * sin + this.CX\r\n        var z1 = tag.z * cos + (tag.x - this.CX) * sin\r\n        tag.x = x1\r\n        tag.z = z1\r\n      }\r\n    },\r\n    listener (event) {\r\n      var x = event.clientX - this.CX\r\n      var y = event.clientY - this.CY\r\n      this.speedX = x * 0.005 > 0 ? Math.min(this.RADIUS * 0.0001, x * 0.005) : Math.max(-this.RADIUS * 0.0001, x * 0.005)\r\n      this.speedY = y * 0.005 > 0 ? Math.min(this.RADIUS * 0.0001, y * 0.005) : Math.max(-this.RADIUS * 0.0001, y * 0.005)\r\n    }\r\n  }\r\n\r\n}\r\n\r\n</script>\r\n"]}]}