{"remainingRequest":"C:\\Users\\Administrator\\documents\\papermaker_master\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\documents\\papermaker_master\\frontend\\src\\views\\SignUp.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\Administrator\\documents\\papermaker_master\\frontend\\src\\views\\SignUp.vue","mtime":1557941839237},{"path":"C:\\Users\\Administrator\\documents\\papermaker_master\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1557941591758},{"path":"C:\\Users\\Administrator\\documents\\papermaker_master\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1557941817033},{"path":"C:\\Users\\Administrator\\documents\\papermaker_master\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1557941716431},{"path":"C:\\Users\\Administrator\\documents\\papermaker_master\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1557941553265},{"path":"C:\\Users\\Administrator\\documents\\papermaker_master\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1557941816984}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.signup{\n  background-image: url(../assets/background.jpg);\n\n  height: 650px;\n  background-position: center top;\n  overflow: hidden;\n  background-repeat: no-repeat;\n  background-size: 100% 100%;\n}\n",{"version":3,"sources":["SignUp.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"SignUp.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"signup\">\r\n    <el-container>\r\n      <el-row type=\"flex\" justify=\"center\">\r\n        <el-form :model=\"ruleForm\" status-icon :rules=\"rules\" ref=\"ruleForm\" label-width=\"80px\" class=\"demo-ruleForm\">\r\n          <el-form-item label=\"用户名\" prop=\"name\">\r\n            <el-input v-model=\"ruleForm.name\" autocomplete=\"off\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"密码\" prop=\"pass\">\r\n            <el-input type=\"password\" v-model=\"ruleForm.pass\" autocomplete=\"off\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"确认密码\" prop=\"checkPass\">\r\n            <el-input type=\"password\" v-model=\"ruleForm.checkPass\" autocomplete=\"off\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">注册</el-button>\r\n            <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </el-row>\r\n    </el-container>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data () {\r\n    var checkName = (rule, value, callback) => {\r\n      if (!value) {\r\n        return callback(new Error('用户名不能为空'))\r\n      } else if (value.length < 3 || value.length > 11) {\r\n        callback(new Error('用户名长度错误'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    var validatePass = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请输入密码'))\r\n      } else {\r\n        if (this.ruleForm.checkPass !== '') {\r\n          this.$refs.ruleForm.validateField('checkPass')\r\n        }\r\n        callback()\r\n      }\r\n    }\r\n    var validatePass2 = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请再次输入密码'))\r\n      } else if (value !== this.ruleForm.pass) {\r\n        callback(new Error('两次输入密码不一致!'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      ruleForm: {\r\n        pass: '',\r\n        checkPass: '',\r\n        name: ''\r\n      },\r\n      rules: {\r\n        pass: [\r\n          { validator: validatePass, trigger: 'blur' }\r\n        ],\r\n        checkPass: [\r\n          { validator: validatePass2, trigger: 'blur' }\r\n        ],\r\n        name: [\r\n          { validator: checkName, trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    submitForm (formName) {\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          alert('注册成功！')\r\n          this.$router.push({ name: 'SignIn' })\r\n        } else {\r\n          console.log('注册失败')\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    resetForm (formName) {\r\n      this.$refs[formName].resetFields()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n  .signup{\r\n    background-image: url(../assets/background.jpg);\r\n\r\n    height: 650px;\r\n    background-position: center top;\r\n    overflow: hidden;\r\n    background-repeat: no-repeat;\r\n    background-size: 100% 100%;\r\n  }\r\n</style>\r\n"]}]}