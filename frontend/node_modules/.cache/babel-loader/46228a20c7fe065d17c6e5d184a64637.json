{"remainingRequest":"C:\\Users\\Administrator\\documents\\papermaker_master\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\documents\\papermaker_master\\frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Administrator\\documents\\papermaker_master\\frontend\\src\\components\\store.js","dependencies":[{"path":"C:\\Users\\Administrator\\documents\\papermaker_master\\frontend\\src\\components\\store.js","mtime":1557407660000},{"path":"C:\\Users\\Administrator\\documents\\papermaker_master\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\documents\\papermaker_master\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\documents\\papermaker_master\\frontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex); // 初始化时用sessionStore.getItem('token'),这样子刷新页面就无需重新登录\n\nvar state = {\n  user: window.sessionStorage.getItem('user'),\n  token: window.sessionStorage.getItem('token')\n};\nvar mutations = {\n  SET_TOKEN: function SET_TOKEN(state, data) {\n    state.token = data;\n    window.sessionStorage.setItem('token', data);\n  },\n  GET_USER: function GET_USER(state, data) {\n    // 把用户名存起来\n    state.user = data;\n    window.sessionStorage.setItem('user', data);\n  },\n  LOG_OUT: function LOG_OUT(state) {\n    // 登出的时候要清除token\n    state.token = null;\n    state.user = null;\n    window.sessionStorage.removeItem('token');\n    window.sessionStorage.removeItem('user');\n  }\n};\nvar actions = {};\nexport default new Vuex.Store({\n  state: state,\n  mutations: mutations,\n  actions: actions\n});",{"version":3,"sources":["C:\\Users\\Administrator\\documents\\papermaker_master\\frontend\\src\\components\\store.js"],"names":["Vue","Vuex","use","state","user","window","sessionStorage","getItem","token","mutations","SET_TOKEN","data","setItem","GET_USER","LOG_OUT","removeItem","actions","Store"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEAD,GAAG,CAACE,GAAJ,CAAQD,IAAR,E,CACA;;AACA,IAAME,KAAK,GAAG;AACZC,EAAAA,IAAI,EAAEC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,MAA9B,CADM;AAEZC,EAAAA,KAAK,EAAEH,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,OAA9B;AAFK,CAAd;AAIA,IAAME,SAAS,GAAG;AAChBC,EAAAA,SAAS,EAAE,mBAACP,KAAD,EAAQQ,IAAR,EAAiB;AAC1BR,IAAAA,KAAK,CAACK,KAAN,GAAcG,IAAd;AACAN,IAAAA,MAAM,CAACC,cAAP,CAAsBM,OAAtB,CAA8B,OAA9B,EAAuCD,IAAvC;AACD,GAJe;AAKhBE,EAAAA,QAAQ,EAAE,kBAACV,KAAD,EAAQQ,IAAR,EAAiB;AACzB;AACAR,IAAAA,KAAK,CAACC,IAAN,GAAaO,IAAb;AACAN,IAAAA,MAAM,CAACC,cAAP,CAAsBM,OAAtB,CAA8B,MAA9B,EAAsCD,IAAtC;AACD,GATe;AAUhBG,EAAAA,OAAO,EAAE,iBAACX,KAAD,EAAW;AAClB;AACAA,IAAAA,KAAK,CAACK,KAAN,GAAc,IAAd;AACAL,IAAAA,KAAK,CAACC,IAAN,GAAa,IAAb;AACAC,IAAAA,MAAM,CAACC,cAAP,CAAsBS,UAAtB,CAAiC,OAAjC;AACAV,IAAAA,MAAM,CAACC,cAAP,CAAsBS,UAAtB,CAAiC,MAAjC;AACD;AAhBe,CAAlB;AAmBA,IAAMC,OAAO,GAAG,EAAhB;AAEA,eAAe,IAAIf,IAAI,CAACgB,KAAT,CAAe;AAC5Bd,EAAAA,KAAK,EAALA,KAD4B;AAE5BM,EAAAA,SAAS,EAATA,SAF4B;AAG5BO,EAAAA,OAAO,EAAPA;AAH4B,CAAf,CAAf","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n// 初始化时用sessionStore.getItem('token'),这样子刷新页面就无需重新登录\nconst state = {\n  user: window.sessionStorage.getItem('user'),\n  token: window.sessionStorage.getItem('token')\n}\nconst mutations = {\n  SET_TOKEN: (state, data) => {\n    state.token = data\n    window.sessionStorage.setItem('token', data)\n  },\n  GET_USER: (state, data) => {\n    // 把用户名存起来\n    state.user = data\n    window.sessionStorage.setItem('user', data)\n  },\n  LOG_OUT: (state) => {\n    // 登出的时候要清除token\n    state.token = null\n    state.user = null\n    window.sessionStorage.removeItem('token')\n    window.sessionStorage.removeItem('user')\n  }\n}\n\nconst actions = {\n}\nexport default new Vuex.Store({\n  state,\n  mutations,\n  actions\n})\n"]}]}