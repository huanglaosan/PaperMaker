{"remainingRequest":"C:\\Users\\Administrator\\documents\\papermaker_master\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\documents\\papermaker_master\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Administrator\\documents\\papermaker_master\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\documents\\papermaker_master\\frontend\\src\\components\\swing.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\documents\\papermaker_master\\frontend\\src\\components\\swing.vue","mtime":1557866351515},{"path":"C:\\Users\\Administrator\\documents\\papermaker_master\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\documents\\papermaker_master\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\documents\\papermaker_master\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\documents\\papermaker_master\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _getIterator from \"C:\\\\Users\\\\Administrator\\\\documents\\\\papermaker_master\\\\frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/get-iterator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'swing',\n  data: function data() {\n    return {\n      width: 300,\n      height: 300,\n      tagsNum: 20,\n      RADIUS: 120,\n      speedX: 5 * Math.PI / 360,\n      speedY: 5 * Math.PI / 360,\n      tags: []\n    };\n  },\n  computed: {\n    CX: function CX() {\n      return this.width / 2;\n    },\n    CY: function CY() {\n      return this.height / 2;\n    }\n  },\n  created: function created() {\n    var tags = [];\n    var tagtexts = ['最新试题', '中高考必杀', '易错题突破', '竞赛专题', '自主招生', '个人信息', '组卷记录'];\n\n    for (var i = 0; i < this.tagsNum; i++) {\n      var tag = {};\n      var k = -1 + (2 * (i + 1) - 1) / this.tagsNum;\n      var a = Math.acos(k);\n      var b = a * Math.sqrt(this.tagsNum * Math.PI);\n      tag.text = tagtexts[i % 7];\n      tag.x = this.CX + this.RADIUS * Math.sin(a) * Math.cos(b);\n      tag.y = this.CY + this.RADIUS * Math.sin(a) * Math.sin(b);\n      tag.z = this.RADIUS * Math.cos(a);\n      tag.href = 'https://imgss.github.io';\n      tags.push(tag);\n    }\n\n    this.tags = tags;\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    setInterval(function () {\n      _this.rotateX(_this.speedX);\n\n      _this.rotateY(_this.speedY);\n    }, 17);\n  },\n  methods: {\n    rotateX: function rotateX(speedX) {\n      var cos = Math.cos(speedX);\n      var sin = Math.sin(speedX);\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _getIterator(this.tags), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var tag = _step.value;\n          var y1 = (tag.y - this.CY) * cos - tag.z * sin + this.CY;\n          var z1 = tag.z * cos + (tag.y - this.CY) * sin;\n          tag.y = y1;\n          tag.z = z1;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    },\n    rotateY: function rotateY(speedY) {\n      var cos = Math.cos(speedY);\n      var sin = Math.sin(speedY);\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = _getIterator(this.tags), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var tag = _step2.value;\n          var x1 = (tag.x - this.CX) * cos - tag.z * sin + this.CX;\n          var z1 = tag.z * cos + (tag.x - this.CX) * sin;\n          tag.x = x1;\n          tag.z = z1;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    },\n    listener: function listener(event) {\n      var x = event.clientX - this.CX;\n      var y = event.clientY - this.CY;\n      this.speedX = x * 0.005 > 0 ? Math.min(this.RADIUS * 0.0001, x * 0.005) : Math.max(-this.RADIUS * 0.0001, x * 0.005);\n      this.speedY = y * 0.005 > 0 ? Math.min(this.RADIUS * 0.0001, y * 0.005) : Math.max(-this.RADIUS * 0.0001, y * 0.005);\n    }\n  }\n};",{"version":3,"sources":["swing.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n\r\n  <div>\r\n    <svg :width='width' :height='height' @mousemove='listener($event)'>\r\n      <a :href=\"tag.href\" v-for='tag in tags'>\r\n        <text :x='tag.x' :y='tag.y' :font-size='20 * (600/(600-tag.z))' :fill-opacity='((400+tag.z)/600)'>{{tag.text}}</text>\r\n      </a>\r\n    </svg>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'swing',\r\n  data () {\r\n    return {\r\n      width: 300,\r\n      height: 300,\r\n      tagsNum: 20,\r\n      RADIUS: 120,\r\n      speedX: 5 * Math.PI / 360,\r\n      speedY: 5 * Math.PI / 360,\r\n      tags: []\r\n    }\r\n  },\r\n  computed: {\r\n    CX () {\r\n      return this.width / 2\r\n    },\r\n    CY () {\r\n      return this.height / 2\r\n    }\r\n  },\r\n  created () {\r\n    let tags = []\r\n    let tagtexts = ['最新试题', '中高考必杀', '易错题突破', '竞赛专题', '自主招生', '个人信息', '组卷记录']\r\n    for (let i = 0; i < this.tagsNum; i++) {\r\n      let tag = {}\r\n      let k = -1 + (2 * (i + 1) - 1) / this.tagsNum\r\n      let a = Math.acos(k)\r\n      let b = a * Math.sqrt(this.tagsNum * Math.PI)\r\n      tag.text = tagtexts[i % 7]\r\n      tag.x = this.CX + this.RADIUS * Math.sin(a) * Math.cos(b)\r\n      tag.y = this.CY + this.RADIUS * Math.sin(a) * Math.sin(b)\r\n      tag.z = this.RADIUS * Math.cos(a)\r\n      tag.href = 'https://imgss.github.io'\r\n      tags.push(tag)\r\n    }\r\n    this.tags = tags\r\n  },\r\n  mounted () {\r\n    setInterval(() => {\r\n      this.rotateX(this.speedX)\r\n      this.rotateY(this.speedY)\r\n    }, 17)\r\n  },\r\n  methods: {\r\n    rotateX (speedX) {\r\n      var cos = Math.cos(speedX)\r\n      var sin = Math.sin(speedX)\r\n      for (let tag of this.tags) {\r\n        var y1 = (tag.y - this.CY) * cos - tag.z * sin + this.CY\r\n        var z1 = tag.z * cos + (tag.y - this.CY) * sin\r\n        tag.y = y1\r\n        tag.z = z1\r\n      }\r\n    },\r\n    rotateY (speedY) {\r\n      var cos = Math.cos(speedY)\r\n      var sin = Math.sin(speedY)\r\n      for (let tag of this.tags) {\r\n        var x1 = (tag.x - this.CX) * cos - tag.z * sin + this.CX\r\n        var z1 = tag.z * cos + (tag.x - this.CX) * sin\r\n        tag.x = x1\r\n        tag.z = z1\r\n      }\r\n    },\r\n    listener (event) {\r\n      var x = event.clientX - this.CX\r\n      var y = event.clientY - this.CY\r\n      this.speedX = x * 0.005 > 0 ? Math.min(this.RADIUS * 0.0001, x * 0.005) : Math.max(-this.RADIUS * 0.0001, x * 0.005)\r\n      this.speedY = y * 0.005 > 0 ? Math.min(this.RADIUS * 0.0001, y * 0.005) : Math.max(-this.RADIUS * 0.0001, y * 0.005)\r\n    }\r\n  }\r\n\r\n}\r\n\r\n</script>\r\n"],"sourceRoot":"src/components"}]}